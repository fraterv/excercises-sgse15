http://docs.mongodb.org/manual/reference/sql-comparison/

1. Aufgabe:

Import:
mongoimport -d praktikum -c zips zips.json 

1.1 INSERT INTO zips VALUES ('Minden', 25000)

> db.zips.insert({ "city" : "MINDEN", "zip": "25000" })
WriteResult({ "nInserted" : 1 })
> db.zips.find( { city: "MINDEN" })
{ "_id" : ObjectId("554cf2d671b97bc2a4199f12"), "city" : "MINDEN", "zip" : "51553", "loc" : { "y" : 41.465355, "x" : 95.551887 }, "pop" : 917, "state" : "IA" }
...
{ "_id" : ObjectId("554cf4e5dc0e43245b9113c3"), "city" : "MINDEN", "zip" : "25000" }


1.2 SELECT * FROM zips

db.zips.find()


1.3 SELECT city, pop FROM zips

db.zips.find({},{"pop":1,"city":1})


1.4 SELECT city, pop FROM zips WHERE pop = 33

> db.zips.find({"pop":33},{pop:1,city:1})
{ "_id" : ObjectId("554cf2d671b97bc2a419a4b4"), "city" : "TUTOR KEY", "pop" : 33 }
{ "_id" : ObjectId("554cf2d671b97bc2a419c109"), "city" : "BINGHAM", "pop" : 33 }
{ "_id" : ObjectId("554cf2d671b97bc2a419c755"), "city" : "CERES", "pop" : 33 }


1.5 SELECT * FROM zips WHERE pop > 33

db.zips.find({"pop":{$gt: 33}},{pop:1,city:1})


1.6 SELECT * FROM zips WHERE pop <= 33

db.zips.find({"pop":{$gte: 33}},{pop:1,city:1})


1.7 SELECT * FROM zips WHERE pop > 33 AND pop < 40

db.zips.find({"pop":{$gt: 33, $lt: 40}},{pop:1,city:1})


1.8 SELECT * FROM zips WHERE pop = 32 AND city = ‘Bob’

db.zips.find({"pop":{"$gt": 33, "$lt": 40}},{pop:1,city:1})


1.9 SELECT * FROM zips WHERE pop = 33 OR city = ‘Bob’

db.zips.find({$or:[{"pop": 33},{"city": "Bob"}]},{pop:1,city:1})


1.10 SELECT * FROM zips WHERE pop = 33 ORDER BY city ASC

db.zips.find({"pop": 33},{pop:1,city:1}).sort({city: 1})


1.11 SELECT * FROM zips ORDER BY city DESC

db.zips.find({},{pop:1,city:1}).sort({city: -1})


1.12 SELECT * FROM zips WHERE city LIKE '%inde%'

db.zips.find({city: /INDE/},{pop:1,city:1})


1.13 SELECT * FROM zips WHERE city LIKE 'inde%'

db.zips.find({city: /^INDE/},{pop:1,city:1})


1.14 SELECT * FROM zips LIMIT 10 SKIP 20

db.zips.find({},{pop:1,city:1}).limit(10).skip(20)


1.15 SELECT * FROM zips LIMIT 1

db.zips.findOne({},{pop:1,city:1})
oder
db.zips.find({},{pop:1,city:1}).limit(1)


1.16 SELECT DISTINCT city FROM zips

db.zips.distinct("city")


1.17 SELECT COUNT(*) FROM zips

db.zips.find().count()


1.18 SELECT COUNT(*) FROM zips WHERE pop > 30

db.zips.find({pop: {$gt: 30}}).count()


1.19 SELECT COUNT(pop) FROM zips

db.zips.find({pop: {$exists: true}}).count()


1.20 UPDATE zips SET pop = 33 WHERE city = 'Minden'

db.zips.update({city: "MINDEN", zip: "25000"},{$set: {pop: "33"}})


1.21 UPDATE zips SET pop = pop + 2 WHERE city = 'Bob'

Datentyp von String auf Number ändern, damit Increment klappt:
http://blog.physalix.com/datas-manipulation-in-mongodb-rename-field-change-type-add-sub-document/
> db.zips.find().forEach( function (x) { x.pop = parseInt(x.pop); db.zips.save(x); });

Multiupdate:
> db.zips.update({city: "MINDEN"}, {$inc: {pop: 2}}, {multi: true})


1.22 DELETE FROM zips WHERE city = 'Minden'

db.zips.remove({city: "MINDEN"})


1.23 CREATE INDEX ON zips (city ASC)

db.zips.createIndex({"city": 1})


1.24 CREATE INDEX ON zips (city ASC, pop DESC)

db.zips.createIndex({"city": 1, "pop": -1})


1.25 EXPLAIN SELECT * FROM zips WHERE pop = 32

db.zips.find({pop: 32}).explain()
